de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)--- de.java_chess.javaChess.GameController.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)--- de.java_chess.javaChess.GameController.setEngine(de.java_chess.javaChess.engine.ChessEngine)
de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)--- de.java_chess.javaChess.GameController.setGame(de.java_chess.javaChess.game.Game)
de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)--- de.java_chess.javaChess.GameController.setGameNotation(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)--- de.java_chess.javaChess.GameController.setGameTimer(de.java_chess.javaChess.timer.GameTimer)
de.java_chess.javaChess.GameController.computerPly()--- de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.computerPly()--- de.java_chess.javaChess.GameController.getEngine()
de.java_chess.javaChess.GameController.computerPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.GameController.computerPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.getBoard()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.setCapture(boolean)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.gameOver(boolean)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.getBoard()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.getGame()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.getGameNotation()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.getRenderer()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.toggleMoveRight()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.gameOver(boolean)--- de.java_chess.javaChess.GameController.getEngine()
de.java_chess.javaChess.GameController.gameOver(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.setGameTimer(de.java_chess.javaChess.timer.GameTimer)--- de.java_chess.javaChess.renderer2d.GameTimerPanel.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.GameController.toggleMoveRight()--- de.java_chess.javaChess.GameController.computerPly()
de.java_chess.javaChess.GameController.toggleMoveRight()--- de.java_chess.javaChess.GameController.getGameTimer()
de.java_chess.javaChess.GameController.toggleMoveRight()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.isRunning()
de.java_chess.javaChess.GameController.toggleMoveRight()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.start()
de.java_chess.javaChess.GameController.toggleMoveRight()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.GameController.getEngine()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.JavaChess.-init-()--- de.java_chess.javaChess.JavaChess$1.-init-()
de.java_chess.javaChess.JavaChess.-init-()--- de.java_chess.javaChess.JavaChess$2.-init-()
de.java_chess.javaChess.JavaChess.-init-()--- de.java_chess.javaChess.JavaChess.free()
de.java_chess.javaChess.JavaChess.-init-()--- de.java_chess.javaChess.JavaChess.jbInit()
de.java_chess.javaChess.JavaChess.-init-()--- de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()
de.java_chess.javaChess.JavaChess.-init-()--- de.java_chess.javaChess.renderer2d.StatusPanel.-init-(java.lang.String)
de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)--- de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()
de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)--- de.java_chess.javaChess.renderer2d.StatusPanel.setActionText(java.lang.String)
de.java_chess.javaChess.JavaChess.getMenuItem(de.java_chess.javaChess.action.JavaChessAction)--- de.java_chess.javaChess.action.JavaChessAction.getName()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.GameController.setRenderer(de.java_chess.javaChess.renderer.ChessBoardRenderer)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.JavaChess$3.-init-(de.java_chess.javaChess.JavaChess)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.JavaChess$4.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.JavaChess.getMenuItem(de.java_chess.javaChess.action.JavaChessAction)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.action.AboutAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.action.HelpAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.action.LoadGameAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.action.ResetGameAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.action.SaveGameAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.engine.ChessEngineImpl.addEngineStatusListener(de.java_chess.javaChess.listener.EngineStatusListener)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.engine.ChessEngineImpl.setEnginePanel(de.java_chess.javaChess.renderer2d.EnginePanel)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.engine.ChessEngineImpl.setStatusPanel(de.java_chess.javaChess.renderer2d.StatusPanel)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.menu.EditMenu.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.menu.EditMenu.getMenu()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.menu.EditMenu.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.notation.GameNotationImpl.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.notation.GameNotationImpl.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.renderer2d.EnginePanel.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.renderer2d.NavigationPanel.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.util.ResourceLoader.-init-()
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.util.ResourceLoader.addLocation(java.lang.String)
de.java_chess.javaChess.JavaChess.jbInit()--- de.java_chess.javaChess.util.ResourceLoader.getInstance()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])--- de.java_chess.javaChess.JavaChess.-init-()
de.java_chess.javaChess.JavaChess.reset()--- de.java_chess.javaChess.GameController.reset()
de.java_chess.javaChess.JavaChess.reset()--- de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()
de.java_chess.javaChess.JavaChess.reset()--- de.java_chess.javaChess.engine.ChessEngineImpl.reset()
de.java_chess.javaChess.JavaChess.reset()--- de.java_chess.javaChess.game.GameImpl.reset()
de.java_chess.javaChess.JavaChess.reset()--- de.java_chess.javaChess.notation.GameNotationImpl.reset()
de.java_chess.javaChess.JavaChess.reset()--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()
de.java_chess.javaChess.JavaChess.reset()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)
de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()--- de.java_chess.javaChess.JavaChess.packFrame()
de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()--- de.java_chess.javaChess.JavaChess.placeFrame(java.awt.Dimension,java.awt.Dimension)
de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()--- de.java_chess.javaChess.JavaChess.setFrameSize(java.awt.Dimension,java.awt.Dimension)
de.java_chess.javaChess.action.AboutAction.-init-()--- de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.HelpAction.-init-()--- de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.JavaChessAction.getName()--- de.java_chess.javaChess.action.JavaChessAction.getShortDescription()
de.java_chess.javaChess.action.LoadGameAction.-init-()--- de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.pgn.PGNFile.-init-(java.io.Reader)
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.pgn.PGNFile.readGame()
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.pgn.PGNFileFilter.getDescription()
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(java.awt.Graphics)
de.java_chess.javaChess.action.ResetGameAction.-init-()--- de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.ResetGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.JavaChess.getInstance()
de.java_chess.javaChess.action.ResetGameAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.JavaChess.reset()
de.java_chess.javaChess.action.SaveGameAction.-init-(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.SaveGameAction.-init-(java.lang.String,de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.SaveGameAction.trySave(java.io.File)--- de.java_chess.javaChess.pgn.PGNOutputStream.-init-(java.io.File)
de.java_chess.javaChess.action.SaveGameAction.trySave(java.io.File)--- de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.action.SaveGameAction.-init-(java.lang.String,de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.action.SaveGameAction.trySave(java.io.File)
de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()
de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.pgn.PGNFileFilter.getDescription()
de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)
de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(java.awt.Graphics)
de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()--- de.java_chess.javaChess.pgn.PGNFileFilter.-init-()
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()--- de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()--- de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.bitboard.BitBoardImpl.clone()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()--- de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()--- de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()--- de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.dialogs.PlayerDialog.-init-(int,java.lang.String)--- de.java_chess.javaChess.dialogs.PlayerDialog.jbInit()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setGame(de.java_chess.javaChess.game.Game)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setPlyGenerator(de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getGame()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.whiteHasMoveRight()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.game.GameImpl.getNumberOfPlies()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.piece.PieceImpl.isWhite()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()--- de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setMoveRight(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getPlyGenerator()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)--- de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.getKnightPlies(int)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.createLogFile()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.setGame(de.java_chess.javaChess.game.Game)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.setOpeningBook(de.java_chess.javaChess.engine.opening_book.OpeningBook)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.setPermanentBrain(de.java_chess.javaChess.engine.permanent_brain.PermanentBrain)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.setWhite(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.PlyGenerator.-init-()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.-init-(de.java_chess.javaChess.engine.ChessEngine)
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.engine.ChessEngineImpl.notifyListeners()
de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.getAnalyzedBoards()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.getMaximumSearchTime()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.inOpeningBook()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.ChessEngineImpl.start()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.ply.PlyImpl.toString()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()--- de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()
de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()--- de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()
de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()--- de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()--- de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()--- de.java_chess.javaChess.engine.ChessEngineImpl.setMaximumSearchTime(int)
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()--- de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()--- de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(de.java_chess.javaChess.engine.opening_book.OpeningBook)
de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()--- de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()
de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()--- de.java_chess.javaChess.engine.ChessEngineImpl.getMaximumSearchTime()
de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()--- de.java_chess.javaChess.engine.ChessEngineImpl.isFixedTime()
de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()--- de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()
de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()--- de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()--- de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)--- de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)--- de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)--- de.java_chess.javaChess.engine.ChessEngineImpl.increaseAnalyzedBoards()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)--- de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.notifyListeners()--- de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.engine.ChessEngineImpl.reset()--- de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()
de.java_chess.javaChess.engine.ChessEngineImpl.reset()--- de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.reset()--- de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.reset()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.reset()
de.java_chess.javaChess.engine.ChessEngineImpl.reset()--- de.java_chess.javaChess.renderer2d.EnginePanel.setText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.reset()--- de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.engine.ChessEngineImpl.increaseSearchDepth()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.engine.ChessEngineImpl.isSearchStop()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.engine.ChessEngineImpl.setSearchDepth(int)
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.ply.PlyImpl.toString()
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.run()--- de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.start()--- de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.isSearchStop()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.game.GameImpl.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()--- de.java_chess.javaChess.engine.ChessEngineImpl.setAnalyzedBoards(long)
de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()--- de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()--- de.java_chess.javaChess.engine.ChessEngineImpl.getPermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()--- de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.stopComputation()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.ChessEngineImpl.getPermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.resetUserPlies()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)--- de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)--- de.java_chess.javaChess.engine.PlyGenerator.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)--- de.java_chess.javaChess.engine.PlyGenerator.precomputeKingPlies()
de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)--- de.java_chess.javaChess.engine.PlyGenerator.precomputeKnightPlies()
de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)--- de.java_chess.javaChess.engine.PlyGenerator.setGame(de.java_chess.javaChess.game.Game)
de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)--- de.java_chess.javaChess.engine.PlyGenerator.setHashtable(de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)--- de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)--- de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()--- de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.engine.PlyGenerator.getAnalyzer()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.engine.PlyGenerator.getGame()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()--- de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()--- de.java_chess.javaChess.engine.BitUtils.-init-()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()--- de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()--- de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.engine.PlyGenerator.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()--- de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)--- de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()--- de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)--- de.java_chess.javaChess.engine.PlyGenerator.getAnalyzer()
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)--- de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)--- de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)--- de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)--- de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)--- de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)
de.java_chess.javaChess.engine.PlyGenerator.getLastPly()--- de.java_chess.javaChess.engine.PlyGenerator.getGame()
de.java_chess.javaChess.engine.PlyGenerator.getLastPly()--- de.java_chess.javaChess.game.GameImpl.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.engine.PlyGenerator.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getAllPiecesForColor(boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.getBoard()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.getHashtable()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.presortPlies()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.PlyGenerator.resetPlies()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.engine.PlyGenerator.presortPlies()--- de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)
de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)--- de.java_chess.javaChess.engine.PlyGenerator.shakersort(int,int)
de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.PlyGenerator.shakersort(int,int)--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.setSearchDepth(int)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.-init-()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.getInstance()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getPly()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()--- de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getSize()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)--- de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.getInstance()--- de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.-init-()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.reset()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.setNotation(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()--- de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(de.java_chess.javaChess.engine.opening_book.OpeningBook)--- de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(de.java_chess.javaChess.engine.opening_book.OpeningBook)--- de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.setOpeningBook(de.java_chess.javaChess.engine.opening_book.OpeningBook)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.-init-(de.java_chess.javaChess.engine.ChessEngine)--- de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.setEngine(de.java_chess.javaChess.engine.ChessEngine)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()--- de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()--- de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getEngine()
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,J)
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,J)--- de.java_chess.javaChess.game.GameImpl$GameStatus.setMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,J)--- de.java_chess.javaChess.game.GameImpl$GameStatus.setMovedPieces(long)
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,J)--- de.java_chess.javaChess.game.GameImpl$GameStatus.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,J)--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.game.GameImpl$GameStatus)--- de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,long)
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.game.GameImpl$GameStatus)--- de.java_chess.javaChess.game.GameImpl$GameStatus.getMovedPieces()
de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.game.GameImpl$GameStatus.setMoved(de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.game.GameImpl.-init-()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.-init-()
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.game.GameImpl,de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.game.GameImpl$GameStatus)
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.game.GameImpl.getLastGameStatus()
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.push(java.lang.Object)
de.java_chess.javaChess.game.GameImpl.getLastGameStatus()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()
de.java_chess.javaChess.game.GameImpl.getLastGameStatus()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()
de.java_chess.javaChess.game.GameImpl.getLastPly()--- de.java_chess.javaChess.game.GameImpl$GameStatus.getPly()
de.java_chess.javaChess.game.GameImpl.getLastPly()--- de.java_chess.javaChess.game.GameImpl.getLastGameStatus()
de.java_chess.javaChess.game.GameImpl.getNumberOfPlies()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.size()
de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.game.GameImpl.getLastGameStatus()
de.java_chess.javaChess.game.GameImpl.reset()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.clear()
de.java_chess.javaChess.game.GameImpl.undoLastPly()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.pop()
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)--- de.java_chess.javaChess.notation.GameNotationImpl.getNotationPanel()
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)--- de.java_chess.javaChess.notation.GameNotationImpl.toString()
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)--- de.java_chess.javaChess.notation.PlyNotationImpl.toString()
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)--- de.java_chess.javaChess.renderer2d.NotationPanel.setText(java.lang.String)
de.java_chess.javaChess.notation.GameNotationImpl.getPGNheader()--- de.java_chess.javaChess.notation.GameNotationImpl.getPlayerInfo(boolean)
de.java_chess.javaChess.notation.GameNotationImpl.reset()--- de.java_chess.javaChess.notation.GameNotationImpl.getNotationPanel()
de.java_chess.javaChess.notation.GameNotationImpl.reset()--- de.java_chess.javaChess.notation.GameNotationImpl.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.notation.GameNotationImpl.reset()--- de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.notation.GameNotationImpl.reset()--- de.java_chess.javaChess.renderer2d.NotationPanel.setText(java.lang.String)
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)--- de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)--- de.java_chess.javaChess.notation.PlyNotationImpl.setPiece(de.java_chess.javaChess.piece.Piece)
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)--- de.java_chess.javaChess.notation.PlyNotationImpl.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()--- de.java_chess.javaChess.notation.PlyNotationImpl.getPiece()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()--- de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()--- de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()--- de.java_chess.javaChess.notation.PlyNotationImpl.isCheck()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()--- de.java_chess.javaChess.notation.PlyNotationImpl.isCheckMate()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()--- de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()--- de.java_chess.javaChess.ply.PlyImpl.toString()
de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()--- de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()--- de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.pgn.GameLoader.-init-()--- de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.pgn.GameLoader.-init-()--- de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()
de.java_chess.javaChess.pgn.GameLoader.-init-()--- de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.pgn.GameLoader.-init-()--- de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.pgn.GameLoader.-init-()--- de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.pgn.GameLoader.-init-()--- de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.pgn.GameLoader.-init-()--- de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.pgn.PGNFile.-init-(java.io.Reader)--- de.java_chess.javaChess.pgn.PGNFile.setReader(java.io.Reader)
de.java_chess.javaChess.pgn.PGNFile.getPGNParser()--- de.java_chess.javaChess.pgn.PGNFile.getReader()
de.java_chess.javaChess.pgn.PGNFile.getPGNParser()--- de.java_chess.javaChess.pgn.PGNLexer.-init-()
de.java_chess.javaChess.pgn.PGNFile.getPGNParser()--- de.java_chess.javaChess.pgn.PGNLexer.-init-(java.io.Reader)
de.java_chess.javaChess.pgn.PGNFile.getPGNParser()--- de.java_chess.javaChess.pgn.PGNParser.-init-()
de.java_chess.javaChess.pgn.PGNFile.getPGNParser()--- de.java_chess.javaChess.pgn.PGNParser.-init-(antlr.TokenStream)
de.java_chess.javaChess.pgn.PGNFile.readGame()--- de.java_chess.javaChess.notation.GameNotationImpl.-init-()
de.java_chess.javaChess.pgn.PGNFile.readGame()--- de.java_chess.javaChess.pgn.PGNFile.getPGNParser()
de.java_chess.javaChess.pgn.PGNFile.readGame()--- de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.pgn.PGNLexer.-init-(antlr.InputBuffer)--- de.java_chess.javaChess.pgn.PGNLexer.-init-(antlr.LexerSharedInputState)
de.java_chess.javaChess.pgn.PGNLexer.-init-(java.io.Reader)--- de.java_chess.javaChess.pgn.PGNLexer.-init-(antlr.InputBuffer)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mLBRACK(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mRBRACK(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mSTRING_LITERAL(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mTAG_BLACK(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mTAG_DATE(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mTAG_EVENT(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mTAG_RESULT(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mTAG_ROUND(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mTAG_SITE(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mTAG_WHITE(boolean)
de.java_chess.javaChess.pgn.PGNLexer.nextToken()--- de.java_chess.javaChess.pgn.PGNLexer.mWS(boolean)
de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.notation.GameNotationImpl.getPGNheader()
de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.notation.GameNotationImpl.toString()
de.java_chess.javaChess.pgn.PGNParser.-init-(antlr.TokenStream)--- de.java_chess.javaChess.pgn.PGNParser.-init-(antlr.TokenStream,int)
de.java_chess.javaChess.pgn.PGNParser.blackTag()--- de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.blackTag()--- de.java_chess.javaChess.pgn.PGNParser.getNotation()
de.java_chess.javaChess.pgn.PGNParser.blackTag()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.dateTag()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.eventTag()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.JavaChess$4.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.action.SaveGameAction.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.pgn.GameLoader.-init-()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.pgn.PGNParser.moveTextSection()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.pgn.PGNParser.setGameLoader(de.java_chess.javaChess.pgn.GameLoader)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.pgn.PGNParser.setNotation(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.pgn.PGNParser.tagPairSection()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.renderer2d.ControlLayer$1.mouseClicked(java.awt.event.MouseEvent)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(java.awt.Graphics)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.pgn.PGNParser.resultTag()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.roundTag()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.siteTag()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.blackTag()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.dateTag()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.eventTag()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.resultTag()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.roundTag()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.siteTag()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.tagPair()--- de.java_chess.javaChess.pgn.PGNParser.whiteTag()
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()--- de.java_chess.javaChess.pgn.PGNParser.tagPair()
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()--- de.java_chess.javaChess.pgn.PGNLexer.nextToken()
de.java_chess.javaChess.pgn.PGNParser.whiteTag()--- de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.whiteTag()--- de.java_chess.javaChess.pgn.PGNParser.getNotation()
de.java_chess.javaChess.pgn.PGNParser.whiteTag()--- de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()
de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)--- de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)--- de.java_chess.javaChess.ply.AnalyzedPlyImpl.setScore(short)
de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)--- de.java_chess.javaChess.ply.PlyImpl.setCapture(boolean)
de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)--- de.java_chess.javaChess.ply.PlyImpl.setDestination(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)--- de.java_chess.javaChess.ply.PlyImpl.setSource(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.position.PositionImpl.equals(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.ply.PlyImpl.toString()--- de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.ply.PlyImpl.toString()--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.ply.PlyImpl.toString()--- de.java_chess.javaChess.position.PositionImpl.toSquareName()
de.java_chess.javaChess.position.PositionImpl.-init-(int)--- de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.position.PositionImpl.equals(de.java_chess.javaChess.position.Position)--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.position.PositionImpl.toSquareName()--- de.java_chess.javaChess.position.PositionImpl.getLineIndex()
de.java_chess.javaChess.position.PositionImpl.toSquareName()--- de.java_chess.javaChess.position.PositionImpl.getRowIndex()
de.java_chess.javaChess.renderer2d.AnimationLayer.-init-(de.java_chess.javaChess.renderer2d.PiecesLayer)--- de.java_chess.javaChess.renderer2d.AnimationLayer.setPiecesLayer(de.java_chess.javaChess.renderer2d.PiecesLayer)
de.java_chess.javaChess.renderer2d.BoardLayer.-init-()--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)--- de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)--- de.java_chess.javaChess.action.ResetGameAction.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)--- de.java_chess.javaChess.action.SaveGameAction.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)--- de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()
de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(java.awt.Graphics)--- de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(java.awt.Graphics)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.BoardLayer.-init-()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getBoard()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.ControlLayer.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.renderer2d.PiecesLayer)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.PiecesLayer.getAnimationLayer()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getMinimumSize()--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getMinimumSize()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.repaintBoard()--- de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.repaintBoard()
de.java_chess.javaChess.renderer2d.ChessSet.-init-(java.awt.Component)--- de.java_chess.javaChess.util.ResourceLoader.getInstance()
de.java_chess.javaChess.renderer2d.ChessSet.-init-(java.awt.Component)--- de.java_chess.javaChess.util.ResourceLoader.loadImage(java.lang.String)
de.java_chess.javaChess.renderer2d.ControlLayer$1.mouseClicked(java.awt.event.MouseEvent)--- de.java_chess.javaChess.renderer2d.ControlLayer$2.-init-(int,de.java_chess.javaChess.renderer2d.ControlLayer)
de.java_chess.javaChess.renderer2d.ControlLayer$2.run()--- de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.renderer2d.ControlLayer$2.run()--- de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.renderer2d.ControlLayer$2.run()--- de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.renderer2d.ControlLayer$2.run()--- de.java_chess.javaChess.renderer2d.ControlLayer.access$0(de.java_chess.javaChess.renderer2d.ControlLayer)
de.java_chess.javaChess.renderer2d.ControlLayer.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.renderer2d.PiecesLayer)--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.renderer2d.ControlLayer.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.renderer2d.PiecesLayer)--- de.java_chess.javaChess.renderer2d.ControlLayer$1.-init-(de.java_chess.javaChess.renderer2d.ControlLayer)
de.java_chess.javaChess.renderer2d.ControlLayer.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.renderer2d.PiecesLayer)--- de.java_chess.javaChess.renderer2d.ControlLayer.setController(de.java_chess.javaChess.GameController)
de.java_chess.javaChess.renderer2d.ControlLayer.access$0(de.java_chess.javaChess.renderer2d.ControlLayer)--- de.java_chess.javaChess.renderer2d.ControlLayer.getController()
de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(java.awt.Graphics)--- de.java_chess.javaChess.renderer2d.ControlLayer.markSquare(int,java.awt.Graphics)
de.java_chess.javaChess.renderer2d.EnginePanel.-init-()--- de.java_chess.javaChess.renderer2d.EnginePanel.jbInit()
de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(java.lang.String)--- de.java_chess.javaChess.renderer2d.EnginePanel.getText()
de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(java.lang.String)--- de.java_chess.javaChess.renderer2d.EnginePanel.setText(java.lang.String)
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)--- de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-()
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setCountdown(int)
de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()--- de.java_chess.javaChess.renderer2d.TimerPanel.-init-(boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()--- de.java_chess.javaChess.renderer2d.TimerPanel.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()--- de.java_chess.javaChess.renderer2d.TimerPanel.alignText()
de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setCountdown(int)
de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setNoClockRunning()
de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)--- de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()
de.java_chess.javaChess.renderer2d.GameTimerPanel.setCountdown(int)--- de.java_chess.javaChess.renderer2d.TimerPanel.setCountdown(int)
de.java_chess.javaChess.renderer2d.GameTimerPanel.start()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setBlackClockRunning()
de.java_chess.javaChess.renderer2d.GameTimerPanel.start()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setRunning(boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.start()--- de.java_chess.javaChess.renderer2d.TimerPanel.start()
de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setRunning(boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()--- de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setBlackClockRunning()
de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()--- de.java_chess.javaChess.renderer2d.GameTimerPanel.setWhiteClockRunning()
de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()--- de.java_chess.javaChess.renderer2d.TimerPanel.start()
de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()--- de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.renderer2d.NavigationPanel.-init-()--- de.java_chess.javaChess.renderer2d.NavigationPanel.jbInit()
de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()
de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)--- de.java_chess.javaChess.renderer2d.NotationPanel.setGameNotation(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.dialogs.PlayerDialog.-init-(int,java.lang.String)
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.dialogs.PlayerDialog.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.dialogs.PlayerDialog.getNewName()
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.renderer2d.NotationPanel.getBlackPlayerName()
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.renderer2d.NotationPanel.getWhitePlayerName()
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)--- de.java_chess.javaChess.util.Tools.setDialogToCenter(javax.swing.JDialog)
de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()--- de.java_chess.javaChess.renderer2d.NotationPanel.setBlackPlayerName(java.lang.String)
de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()--- de.java_chess.javaChess.renderer2d.NotationPanel.setWhitePlayerName(java.lang.String)
de.java_chess.javaChess.renderer2d.NotationPanel.setBlackPlayerName(java.lang.String)--- de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.setWhitePlayerName(java.lang.String)--- de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.AnimationLayer.-init-(de.java_chess.javaChess.renderer2d.PiecesLayer)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.ChessSet.-init-(java.awt.Component)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)--- de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)--- de.java_chess.javaChess.renderer2d.PositionRenderer.getPieceFrom(de.java_chess.javaChess.renderer2d.PositionRenderer)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.renderer2d.PieceRenderer.-init-(byte,byte,de.java_chess.javaChess.renderer2d.ChessSet,java.awt.Component)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.renderer2d.PositionRenderer.-init-()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()--- de.java_chess.javaChess.renderer2d.PositionRenderer.-init-(java.awt.Image)
de.java_chess.javaChess.renderer2d.PositionRenderer.getPieceFrom(de.java_chess.javaChess.renderer2d.PositionRenderer)--- de.java_chess.javaChess.renderer2d.PositionRenderer.setIcon(javax.swing.ImageIcon)
de.java_chess.javaChess.renderer2d.StatusPanel.-init-(java.lang.String)--- de.java_chess.javaChess.renderer2d.StatusPanel.jbInit()
de.java_chess.javaChess.renderer2d.TimerPanel.-init-(boolean)--- de.java_chess.javaChess.renderer2d.TimerPanel.setCountingDirection(boolean)
de.java_chess.javaChess.renderer2d.TimerPanel.display(long)--- de.java_chess.javaChess.renderer2d.TimerPanel.isCountdown()
de.java_chess.javaChess.renderer2d.TimerPanel.notifyListeners(java.awt.event.ActionEvent)--- de.java_chess.javaChess.renderer2d.GameTimerPanel.actionPerformed(java.awt.event.ActionEvent)
de.java_chess.javaChess.renderer2d.TimerPanel.run()--- de.java_chess.javaChess.renderer2d.TimerPanel.display(long)
de.java_chess.javaChess.renderer2d.TimerPanel.run()--- de.java_chess.javaChess.renderer2d.TimerPanel.notifyListeners(java.awt.event.ActionEvent)
de.java_chess.javaChess.renderer2d.TimerPanel.setCountdown(int)--- de.java_chess.javaChess.renderer2d.TimerPanel.display(long)
de.java_chess.javaChess.util.ResourceLoader.getInstance()--- de.java_chess.javaChess.util.ResourceLoader.-init-()
de.java_chess.javaChess.util.UnsynchronizedArrayStack.-init-()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.-init-(int)
de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()
de.java_chess.javaChess.util.UnsynchronizedArrayStack.pop()--- de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()