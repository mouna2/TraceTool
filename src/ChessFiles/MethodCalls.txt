de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)---de.java_chess.javaChess.timer.GameTimer.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)---de.java_chess.javaChess.renderer2d.GameTimerPanel.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.renderer.ChessBoardRenderer.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.engine.ChessEngine.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.notation.PlyNotation.setCheckMate(boolean)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.notation.PlyNotation.setCheck(boolean)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.timer.GameTimer.stop()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.timer.GameTimer.isRunning()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.timer.GameTimer.toggle()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.timer.GameTimer.start()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.renderer2d.GameTimerPanel.isRunning()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.renderer2d.GameTimerPanel.start()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.notation.PlyNotationImpl.setCheckMate(boolean)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.engine.ChessEngine.startPermanentBrain()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.GameController.computerPly()---de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.TransformationDialog.getInstance()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.TransformationDialog.getPieceType()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.getLastPly()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.setCapture(boolean)
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.GameController.convertUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.getLastPly()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer.ChessBoardRenderer.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotation.setCheckMate(boolean)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotation.setCheck(boolean)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.stop()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.isRunning()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.toggle()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.start()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.isRunning()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.start()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotationImpl.setCheckMate(boolean)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.GameController.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()
de.java_chess.javaChess.GameController.gameOver(boolean)---de.java_chess.javaChess.engine.ChessEngine.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.gameOver(boolean)---de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)
de.java_chess.javaChess.test.JavaChessTest.suite()---de.java_chess.javaChess.engine.test.ChessEngineTest.suite()
de.java_chess.javaChess.position.PositionImpl.equals(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.position.PositionImpl.equals(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.timer.GameTimer.start()---de.java_chess.javaChess.renderer2d.TimerPanel.start()
de.java_chess.javaChess.timer.GameTimer.start()---de.java_chess.javaChess.renderer2d.GameTimerPanel.setBlackClockRunning()
de.java_chess.javaChess.timer.GameTimer.start()---de.java_chess.javaChess.renderer2d.GameTimerPanel.setRunning(boolean)
de.java_chess.javaChess.timer.GameTimer.stop()---de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.timer.GameTimer.stop()---de.java_chess.javaChess.renderer2d.GameTimerPanel.setRunning(boolean)
de.java_chess.javaChess.timer.GameTimer.toggle()---de.java_chess.javaChess.renderer2d.GameTimerPanel.setBlackClockRunning()
de.java_chess.javaChess.timer.GameTimer.toggle()---de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.timer.GameTimer.toggle()---de.java_chess.javaChess.renderer2d.TimerPanel.start()
de.java_chess.javaChess.timer.GameTimer.toggle()---de.java_chess.javaChess.renderer2d.GameTimerPanel.setWhiteClockRunning()
de.java_chess.javaChess.position.PositionImpl.toSquareName()---de.java_chess.javaChess.position.Position.getLineIndex()
de.java_chess.javaChess.position.PositionImpl.toSquareName()---de.java_chess.javaChess.position.Position.getRowIndex()
de.java_chess.javaChess.renderer.ChessBoardRenderer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.renderer.ChessBoardRenderer.repaintBoard()---de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()
de.java_chess.javaChess.renderer.ChessBoardRenderer.reset()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.repaintBoard()
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.renderer2d.PiecesLayer.getPositionRenderer(int)
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.renderer2d.PositionRenderer.setIcon(javax.swing.ImageIcon)
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.renderer2d.AnimationLayer.run()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.renderer2d.BoardLayer.-init-()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.PGNPlyFragment.-init-()
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.PGNPlyFragment.setPieceTypeFromLetter(char)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.PGNPlyFragment.setOrigin(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.PGNPlyFragment.setCapture(boolean)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.PGNPlyFragment.setDestination(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.PGNPlyFragment.setPawnPromotion(char)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.PGNPlyFragment.setCastling(boolean)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.pgn.PGNParser.move()---de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.PiecesLayer.getAnimationLayer()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.BoardLayer.-init-()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.ControlLayer.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.renderer2d.PiecesLayer)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer.ChessBoardRenderer.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer.ChessBoardRenderer.getBoard()
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.PGNPlyFragment.-init-()
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.PGNPlyFragment.setPieceTypeFromLetter(char)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.PGNPlyFragment.setOrigin(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.PGNPlyFragment.setCapture(boolean)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.PGNPlyFragment.setDestination(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.PGNPlyFragment.setPawnPromotion(char)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.PGNPlyFragment.setCastling(boolean)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.pgn.PGNParser.moveTextSection()---de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.clearBoard()---de.java_chess.javaChess.renderer2d.PiecesLayer.clearBoard()
de.java_chess.javaChess.pgn.PGNParser.openingTag()---de.java_chess.javaChess.notation.GameNotation.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.openingTag()---de.java_chess.javaChess.notation.GameNotationImpl.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.util.UnsynchronizedArrayStack.iterator()---de.java_chess.javaChess.util.ArrayStackIterator.-init-(java.lang.Object[],int)
de.java_chess.javaChess.util.UnsynchronizedArrayStack.iterator()---de.java_chess.javaChess.util.ArrayStackIterator.-init-(java.lang.Object[],int)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.GameLoader.-init-()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.PGNPlyFragment.-init-()
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.PGNPlyFragment.setPieceTypeFromLetter(char)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.PGNPlyFragment.setOrigin(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.PGNPlyFragment.setCapture(boolean)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.PGNPlyFragment.setDestination(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.PGNPlyFragment.setPawnPromotion(char)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.PGNPlyFragment.setCastling(boolean)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.PGNPlyFragment.-init-()
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.PGNPlyFragment.setPieceTypeFromLetter(char)
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.PGNPlyFragment.setOrigin(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.PGNPlyFragment.setCapture(boolean)
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.PGNPlyFragment.setDestination(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.PGNPlyFragment.setPawnPromotion(char)
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.PGNPlyFragment.setCastling(boolean)
de.java_chess.javaChess.pgn.PGNParser.ply()---de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.repaintBoard()---de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()---de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()
de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()---de.java_chess.javaChess.renderer.ChessBoardRenderer.repaintBoard()
de.java_chess.javaChess.pgn.PGNParser.tagPair()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPair()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPair()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPair()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPair()---de.java_chess.javaChess.notation.GameNotation.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.tagPair()---de.java_chess.javaChess.notation.GameNotationImpl.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()---de.java_chess.javaChess.notation.GameNotation.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.pgn.PGNParser.tagPairSection()---de.java_chess.javaChess.notation.GameNotationImpl.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.renderer2d.ControlLayer.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.renderer2d.PiecesLayer)---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.pgn.PGNParser.whiteTag()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.whiteTag()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.notation.PlyNotation.toString()
de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.notation.GameNotationImpl.getNotationPanel()
de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.renderer2d.NotationPanel.setText(java.lang.String)
de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.notation.GameNotationImpl.toString()
de.java_chess.javaChess.notation.GameNotation.getMove(int,boolean)---de.java_chess.javaChess.notation.GameNotationImpl.getPly(int)
de.java_chess.javaChess.notation.GameNotation.getPGNheader()---de.java_chess.javaChess.notation.GameNotationImpl.getPlayerInfo(boolean)
de.java_chess.javaChess.notation.GameNotation.reset()---de.java_chess.javaChess.renderer2d.NotationPanel.setText(java.lang.String)
de.java_chess.javaChess.notation.GameNotation.reset()---de.java_chess.javaChess.notation.GameNotationImpl.getNotationPanel()
de.java_chess.javaChess.notation.GameNotation.reset()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.notation.GameNotation.reset()---de.java_chess.javaChess.notation.GameNotationImpl.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.pgn.PGNPlyFragment.setDestination(java.lang.String)---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.pgn.PGNPlyFragment.setOrigin(java.lang.String)---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.notation.PlyNotation.toString()
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.renderer2d.NotationPanel.setText(java.lang.String)
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.notation.PlyNotationImpl.toString()
de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)---de.java_chess.javaChess.notation.GameNotation.toString()
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-()---de.java_chess.javaChess.renderer2d.TimerPanel.-init-(boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-()---de.java_chess.javaChess.renderer2d.TimerPanel.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-()---de.java_chess.javaChess.renderer2d.TimerPanel.alignText()
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)---de.java_chess.javaChess.renderer2d.TimerPanel.-init-(boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)---de.java_chess.javaChess.renderer2d.TimerPanel.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)---de.java_chess.javaChess.renderer2d.TimerPanel.alignText()
de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)---de.java_chess.javaChess.renderer2d.TimerPanel.setCountdown(int)
de.java_chess.javaChess.renderer2d.GameTimerPanel.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.renderer2d.GameTimerPanel.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.timer.GameTimer.stop()
de.java_chess.javaChess.notation.GameNotationImpl.getPGNheader()---de.java_chess.javaChess.notation.GameNotation.getPlayerInfo(boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()---de.java_chess.javaChess.renderer2d.TimerPanel.-init-(boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()---de.java_chess.javaChess.renderer2d.TimerPanel.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()---de.java_chess.javaChess.renderer2d.TimerPanel.alignText()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.stopComputation()---de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(boolean)
de.java_chess.javaChess.notation.GameNotationImpl.reset()---de.java_chess.javaChess.renderer2d.NotationPanel.setText(java.lang.String)
de.java_chess.javaChess.notation.GameNotationImpl.reset()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.notation.GameNotationImpl.reset()---de.java_chess.javaChess.notation.GameNotation.setOpeningInfo(java.lang.String)
de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)---de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)---de.java_chess.javaChess.renderer2d.TimerPanel.setCountdown(int)
de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)---de.java_chess.javaChess.timer.GameTimer.stop()
de.java_chess.javaChess.renderer2d.GameTimerPanel.setCountdown(int)---de.java_chess.javaChess.renderer2d.TimerPanel.setCountdown(int)
de.java_chess.javaChess.ply.AnalyzedPly.clone()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.ply.AnalyzedPly.clone()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.ply.AnalyzedPly.clone()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.ply.AnalyzedPly.clone()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.test.AnalyzerTest1.analyzerTest1()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest1.analyzerTest1()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.AnalyzerTest1.analyzerTest1()---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest1.analyzerTest1()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest1.analyzerTest1()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.renderer2d.GameTimerPanel.start()---de.java_chess.javaChess.renderer2d.TimerPanel.start()
de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()---de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()---de.java_chess.javaChess.renderer2d.TimerPanel.stop()
de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()---de.java_chess.javaChess.renderer2d.TimerPanel.start()
de.java_chess.javaChess.engine.test.AnalyzerTest1.runTest()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest1.runTest()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.AnalyzerTest1.runTest()---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest1.runTest()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest1.runTest()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.notation.PlyNotation.isCapture()---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.notation.PlyNotation.isCapture()---de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.AnalyzerTest1.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)---de.java_chess.javaChess.ply.AnalyzedPly.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)---de.java_chess.javaChess.ply.AnalyzedPly.setScore(short)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.game.Game.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.game.GameImpl.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.analyzerTest2()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.notation.PlyNotation.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotationImpl.setCheckMate(boolean)
de.java_chess.javaChess.notation.PlyNotation.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()
de.java_chess.javaChess.ply.AnalyzedPlyImpl.clone()---de.java_chess.javaChess.ply.AnalyzedPly.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.clone()---de.java_chess.javaChess.ply.AnalyzedPly.setScore(short)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.clone()---de.java_chess.javaChess.ply.AnalyzedPly.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.clone()---de.java_chess.javaChess.ply.AnalyzedPly.setScore(short)
de.java_chess.javaChess.ply.AnalyzedPlyImpl.clone()---de.java_chess.javaChess.ply.AnalyzedPly.getPly()
de.java_chess.javaChess.ply.AnalyzedPlyImpl.clone()---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.test.AnalyzerTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.notation.PlyNotation.setCheckMate(boolean)---de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.game.Game.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.game.GameImpl.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.prepareTest()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.reset()---de.java_chess.javaChess.game.Game.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.reset()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.AnalyzerTest2.reset()---de.java_chess.javaChess.game.GameImpl.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.game.Game.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.game.GameImpl.reset()
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.runTest()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.AnalyzerTest2.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.AnalyzerTest2.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.AnalyzerTest2.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.AnalyzerTest2.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.AnalyzerTest2.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.ply.TransformationPly.getTypeAfterTransformation()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.getPiece()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.getPieceTypeNotation(byte)
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.ply.TransformationPlyImpl.getTypeAfterTransformation()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.isCheckMate()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.isCheck()
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.setPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)---de.java_chess.javaChess.notation.PlyNotation.setPiece(de.java_chess.javaChess.piece.Piece)
de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.dialogs.PlayerDialog.-init-(int,java.lang.String)
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.util.Tools.setDialogToCenter(javax.swing.JDialog)
de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.dialogs.PlayerDialog.getNewName()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.ply.TransformationPly.getTypeAfterTransformation()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.notation.PlyNotation.getPiece()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.notation.PlyNotation.getPieceTypeNotation(byte)
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.notation.PlyNotation.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.ply.TransformationPlyImpl.getTypeAfterTransformation()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.notation.PlyNotation.isCheckMate()
de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()---de.java_chess.javaChess.notation.PlyNotation.isCheck()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.boardConsistencyTest1()---de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)---de.java_chess.javaChess.ply.CastlingPly.setLeftCastling(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.startComputation()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.stopComputation()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.runTest()---de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.setUp()---de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.test.BoardConsistencyTest1.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()---de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.ply.CastlingPlyImpl.toString()---de.java_chess.javaChess.ply.CastlingPly.isLeftCastling()
de.java_chess.javaChess.renderer2d.NotationPanel.setBlackPlayerName(java.lang.String)---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.setBlackPlayerName(java.lang.String)---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.resetUserPlies()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.opening_book.OpeningBook.doUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.getBoard()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.PlyGeneratorTest1.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.PlyGeneratorTest2.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.PlyGeneratorTest3.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.PlyGeneratorTest4.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.PlyGeneratorTest5.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.PlyGeneratorTest6.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.KingInKnightCheckTest.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.AnalyzerTest1.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.AnalyzerTest2.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.MinimaxTest1.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.MinimaxTest2.-init-()
de.java_chess.javaChess.engine.test.ChessEngineTest.suite()---de.java_chess.javaChess.engine.test.BoardConsistencyTest1.-init-()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.setCheck(boolean)
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.ply.TransformationPly.getTypeAfterTransformation()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.getPiece()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.getPieceTypeNotation(byte)
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.isCapture()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.ply.TransformationPlyImpl.getTypeAfterTransformation()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.isCheckMate()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.isCheck()
de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)---de.java_chess.javaChess.notation.PlyNotation.setCheckMate(boolean)
de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.ply.EnPassantPly.setAttackedPosition(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.renderer2d.NotationPanel.setWhitePlayerName(java.lang.String)---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.renderer2d.NotationPanel.setWhitePlayerName(java.lang.String)---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(long,int,int,int)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.knightTests()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.knightTests()---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.knightTests()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.knightTests()---de.java_chess.javaChess.board.Board.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.knightTests()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.knightTests()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.notation.PlyNotationImpl.setCheckMate(boolean)---de.java_chess.javaChess.notation.PlyNotation.setCheck(boolean)
de.java_chess.javaChess.engine.PlyGenerator.addCastlingPly(int,boolean)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addCastlingPly(int,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addCastlingPly(int,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addCastlingPly(int,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addCastlingPly(int,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addCastlingPly(int,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.runTest()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.runTest()---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.runTest()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.runTest()---de.java_chess.javaChess.board.Board.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.runTest()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.runTest()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.KingInKnightCheckTest.setUp()---de.java_chess.javaChess.board.Board.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.PositionRenderer.-init-(java.awt.Image)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.PieceRenderer.-init-(byte,byte,de.java_chess.javaChess.renderer2d.ChessSet,java.awt.Component)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.PositionRenderer.-init-()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.ChessSet.-init-(java.awt.Component)
de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.renderer2d.AnimationLayer.-init-(de.java_chess.javaChess.renderer2d.PiecesLayer)
de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.equals(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.renderer2d.PiecesLayer.clearBoard()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.clearBoard()---de.java_chess.javaChess.renderer2d.PositionRenderer.-init-()
de.java_chess.javaChess.renderer2d.PiecesLayer.clearBoard()---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.clearBoard()---de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.PieceRenderer.-init-(byte,byte,de.java_chess.javaChess.renderer2d.ChessSet,java.awt.Component)
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.AnimationLayer.animatePly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.AnimationLayer.start()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPly.isLeftCastling()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.PositionRenderer.getPieceFrom(de.java_chess.javaChess.renderer2d.PositionRenderer)
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.PositionRenderer.setIcon(javax.swing.ImageIcon)
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPly.getTypeAfterTransformation()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPly.getAttackedPosition()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.isLeftCastling()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPlyImpl.getTypeAfterTransformation()
de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPlyImpl.getAttackedPosition()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.game.Game.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.pgn.GameLoader.-init-()---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.pgn.GameLoader.-init-()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.pgn.GameLoader.-init-()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.pgn.GameLoader.-init-()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.pgn.GameLoader.-init-()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.pgn.GameLoader.-init-()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.pgn.GameLoader.-init-()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest1.minimaxTest1()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.isCastling()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.isLeftCastling()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.getOrigin()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.getDestination()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.getPieceType()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.setOrigin(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.isPawnPromotion()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.getNewPieceType()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.pgn.PGNPlyFragment.isCapture()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.pgn.GameLoader.completePly(de.java_chess.javaChess.pgn.PGNPlyFragment)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.game.Game.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.game.GameImpl.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest1.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.pgn.GameLoader.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.pgn.GameLoader.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.pgn.GameLoader.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.renderer2d.PositionRenderer.-init-(java.awt.Image)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.renderer2d.PieceRenderer.-init-(byte,byte,de.java_chess.javaChess.renderer2d.ChessSet,java.awt.Component)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.renderer2d.PositionRenderer.-init-()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest1.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.pgn.PGNFile.getPGNParser()---de.java_chess.javaChess.pgn.PGNLexer.-init-(java.io.Reader)
de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)---de.java_chess.javaChess.ply.Ply.setSource(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)---de.java_chess.javaChess.ply.Ply.setDestination(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(int)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.equals(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.equals(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest2.minimaxTest1()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.pgn.PGNFile.readGame()---de.java_chess.javaChess.notation.GameNotationImpl.-init-()
de.java_chess.javaChess.pgn.PGNFile.readGame()---de.java_chess.javaChess.pgn.PGNParser.pgnGame(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.pgn.PGNFile.readGame()---de.java_chess.javaChess.pgn.PGNLexer.-init-(java.io.Reader)
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addPly(de.java_chess.javaChess.ply.Ply,short)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.MinimaxTest2.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(int,int,boolean,short)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.engine.ChessEngine.setWhite(boolean)
de.java_chess.javaChess.engine.test.MinimaxTest2.setUp()---de.java_chess.javaChess.engine.ChessEngineImpl.setWhite(boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(long,int,int,int)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(long,int,int,int)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addTransformationPly(int,int,byte,boolean,short)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addTransformationPly(int,int,byte,boolean,short)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.addTransformationPly(int,int,byte,boolean,short)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.addTransformationPly(int,int,byte,boolean,short)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.addTransformationPly(int,int,byte,boolean,short)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.addTransformationPly(int,int,byte,boolean,short)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.plygeneratorTest1()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.plygeneratorTest1()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.plygeneratorTest1()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.plygeneratorTest1()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.plygeneratorTest1()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.plygeneratorTest1()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.plygeneratorTest1()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.runTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.ply.PlyImpl.toString()---de.java_chess.javaChess.position.Position.toSquareName()
de.java_chess.javaChess.ply.PlyImpl.toString()---de.java_chess.javaChess.position.PositionImpl.toSquareName()
de.java_chess.javaChess.ply.PlyImpl.toString()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.ply.PlyImpl.toString()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest1.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.util.StringTextDocument.-init-(int,int)
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getSelectedPieceImage()
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.initializeSelectedIconLabel()
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.clearBoard()
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()
de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()---de.java_chess.javaChess.renderer.ChessBoardRenderer.reset()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)---de.java_chess.javaChess.ply.TransformationPly.setTypeAfterTransformation(byte)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.generatorTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.generatorTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.generatorTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.generatorTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.generatorTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbClearBoard_actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.clearBoard()
de.java_chess.javaChess.engine.PlyGenerator.getLastPly()---de.java_chess.javaChess.game.Game.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.getLastPly()---de.java_chess.javaChess.game.GameImpl.getLastPly()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.runTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.util.StringTextDocument.-init-(int,int)
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getSelectedPieceImage()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.initializeSelectedIconLabel()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.clearBoard()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbInit()---de.java_chess.javaChess.renderer.ChessBoardRenderer.reset()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getAllPiecesForColor(boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.game.Game.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.game.GameImpl.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.game.Game.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getPly(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPly.setScore(short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getAllPiecesForColor(boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.setScore(short)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest2.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getAllPiecesForColor(boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.game.Game.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.game.GameImpl.getLastPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.game.Game.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getPly(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPly.setScore(short)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getAllPiecesForColor(boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.setScore(short)
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbStartPosition_actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbStartPosition_actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jbStartPosition_actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer.ChessBoardRenderer.reset()
de.java_chess.javaChess.position.Position.equals(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.dialogs.SetupBoardDialog.jpBoard_mouseEntered(java.awt.event.MouseEvent)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getSelectedPieceImage()
de.java_chess.javaChess.dialogs.SetupBoardDialog.jpBoard_mouseEntered(java.awt.event.MouseEvent)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.initializeSelectedIconLabel()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.generatorTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.generatorTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.generatorTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.generatorTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.generatorTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.presortPlies()---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.presortPlies()---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.presortPlies()---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.presortPlies()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.PlyGenerator.presortPlies()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.runTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.PlyGenerator.quickersort(int,int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest3.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.position.Position.toSquareName()---de.java_chess.javaChess.position.PositionImpl.getLineIndex()
de.java_chess.javaChess.position.Position.toSquareName()---de.java_chess.javaChess.position.PositionImpl.getRowIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.position.PositionImpl.-init-(int)---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.generatorTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.generatorTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.generatorTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.generatorTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.generatorTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)---de.java_chess.javaChess.position.IllegalPositionException.-init-()
de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.runTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.whiteHasMoveRight()
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.game.Game.getNumberOfPlies()
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getGame()
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()---de.java_chess.javaChess.piece.Piece.isWhite()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest4.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setMoveRight(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()
de.java_chess.javaChess.engine.PlyGenerator.shakersort(int,int)---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.PlyGenerator.shakersort(int,int)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.GameController.setGameTimer(de.java_chess.javaChess.timer.GameTimer)---de.java_chess.javaChess.timer.GameTimer.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.GameController.setGameTimer(de.java_chess.javaChess.timer.GameTimer)---de.java_chess.javaChess.renderer2d.GameTimerPanel.addActionListener(java.awt.event.ActionListener)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)---de.java_chess.javaChess.engine.PlyGenerator.getKnightPlies(int)
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getPlyGenerator()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtable.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getPly()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.generatorTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.generatorTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.generatorTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.generatorTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.generatorTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.runTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.hashKey()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getSearchDepth()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.removeOldestEntry()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest5.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.engine.PlyGenerator.getKnightPlies(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.engine.BitBoardAnalyzer.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.game.Game.getNumberOfPlies()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.piece.Piece.isWhite()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.game.GameImpl.getNumberOfPlies()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.engine.BitBoardAnalyzer.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.piece.PieceImpl.isWhite()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.isWhite()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.setMaximumSize(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.setMaximumSize(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtable.setMaximumSize(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.removeOldestEntry()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.generatorTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.generatorTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.generatorTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.generatorTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.generatorTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.generatorTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.PlyGenerator.getKnightPlies(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.game.Game.getNumberOfPlies()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.Piece.isWhite()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.game.GameImpl.getNumberOfPlies()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.PieceImpl.isWhite()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.isWhite()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.setMoveRight(boolean)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.runTest()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.runTest()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.runTest()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.runTest()---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.runTest()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.runTest()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.runTest()---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.bitboard.BitBoard,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.position.PositionImpl.-init-(java.lang.String)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.test.PlyGeneratorTest6.setUp()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.toggleMoveRight()---de.java_chess.javaChess.timer.GameTimer.isRunning()
de.java_chess.javaChess.GameController.toggleMoveRight()---de.java_chess.javaChess.timer.GameTimer.toggle()
de.java_chess.javaChess.GameController.toggleMoveRight()---de.java_chess.javaChess.timer.GameTimer.start()
de.java_chess.javaChess.GameController.toggleMoveRight()---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.GameController.toggleMoveRight()---de.java_chess.javaChess.renderer2d.GameTimerPanel.isRunning()
de.java_chess.javaChess.GameController.toggleMoveRight()---de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()
de.java_chess.javaChess.GameController.toggleMoveRight()---de.java_chess.javaChess.renderer2d.GameTimerPanel.start()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.stopPermanentBrain()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.-init-(de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,byte,boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.TransformationDialog.getInstance()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.TransformationDialog.getPieceType()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.getLastPly()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.setCapture(boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.getLastPly()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotationImpl.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.piece.Piece)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer.ChessBoardRenderer.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotation.setCheckMate(boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotation.setCheck(boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotation.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.stop()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.isRunning()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.toggle()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.timer.GameTimer.start()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.computeBestPly()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.isRunning()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.start()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotationImpl.setCheckMate(boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotationImpl.setCheck(boolean)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotationImpl.addPly(de.java_chess.javaChess.notation.PlyNotation)
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()
de.java_chess.javaChess.GameController.userPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.notation.GameNotationImpl.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.menu.EditMenu.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.renderer2d.EnginePanel.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.renderer2d.NavigationPanel.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.ResetGameAction.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.LoadGameAction.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.SaveGameAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.HelpAction.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.AboutAction.-init-()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.util.ResourceLoader.addLocation(java.lang.String)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.util.ResourceLoader.getInstance()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.engine.ChessEngineImpl.addEngineStatusListener(de.java_chess.javaChess.listener.EngineStatusListener)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.GameController.setRenderer(de.java_chess.javaChess.renderer.ChessBoardRenderer)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.notation.GameNotationImpl.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.menu.EditMenu.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.engine.ChessEngineImpl.setEnginePanel(de.java_chess.javaChess.renderer2d.EnginePanel)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.engine.ChessEngineImpl.setStatusPanel(de.java_chess.javaChess.renderer2d.StatusPanel)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.JavaChessAction.getName()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.menu.EditMenu.getMenu()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.engine.ChessEngine.getMenu()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.renderer2d.StatusPanel.setActionText(java.lang.String)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.listener.EngineStatusListener.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.JavaChess.-init-()---de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)---de.java_chess.javaChess.renderer2d.StatusPanel.setActionText(java.lang.String)
de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)---de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()
de.java_chess.javaChess.JavaChess.getMenuItem(de.java_chess.javaChess.action.JavaChessAction)---de.java_chess.javaChess.action.JavaChessAction.getName()
de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.game.GameImpl$GameStatus)
de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.util.UnsynchronizedArrayStack.push(java.lang.Object)
de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl.getLastGameStatus()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.hashKey()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.hashKey()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.hashKey()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()
de.java_chess.javaChess.game.Game.getLastPly()---de.java_chess.javaChess.game.GameImpl.getLastGameStatus()
de.java_chess.javaChess.game.Game.getLastPly()---de.java_chess.javaChess.game.GameImpl$GameStatus.getPly()
de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.getPGNheader()
de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotation.toString()
de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.getPGNheader()
de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.notation.GameNotationImpl.toString()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)---de.java_chess.javaChess.engine.PlyGenerator.getKnightPlies(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.isWhiteMove()---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.isWhiteMove()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.isWhiteMove()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.isWhiteMove()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.isWhiteMove()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getPly()
de.java_chess.javaChess.game.Game.getNumberOfPlies()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.size()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitUtils.getHighestBit(long)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.PlyGenerator.getKnightPlies(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(int)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.getBoard()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.setBoard(de.java_chess.javaChess.bitboard.BitBoard)
de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(boolean)
de.java_chess.javaChess.game.Game.hasBeenMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.game.GameImpl.getLastGameStatus()
de.java_chess.javaChess.game.Game.hasBeenMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.game.Game.reset()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.clear()
de.java_chess.javaChess.game.Game.undoLastPly()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.pop()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.getInstance()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getPly()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.isWhiteMove()
de.java_chess.javaChess.pgn.PGNParser.blackTag()---de.java_chess.javaChess.notation.GameNotation.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.pgn.PGNParser.blackTag()---de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(java.lang.String,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.getInstance()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getPly()
de.java_chess.javaChess.game.GameImpl.-init-()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.-init-()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.inOpeningBook()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(boolean)
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.start()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.getMaximumSearchTime()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(boolean)
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.ply.AnalyzedPly.getPly()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.engine.ChessEngineImpl.getAnalyzedBoards()
de.java_chess.javaChess.engine.ChessEngine.computeBestPly()---de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.notation.GameNotationImpl.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.menu.EditMenu.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.renderer2d.EnginePanel.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.renderer2d.NavigationPanel.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.ResetGameAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.LoadGameAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.SaveGameAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.HelpAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.AboutAction.-init-()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.util.ResourceLoader.addLocation(java.lang.String)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.util.ResourceLoader.getInstance()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.engine.ChessEngineImpl.addEngineStatusListener(de.java_chess.javaChess.listener.EngineStatusListener)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.GameController.setRenderer(de.java_chess.javaChess.renderer.ChessBoardRenderer)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.notation.GameNotationImpl.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.menu.EditMenu.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.engine.ChessEngineImpl.setEnginePanel(de.java_chess.javaChess.renderer2d.EnginePanel)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.engine.ChessEngineImpl.setStatusPanel(de.java_chess.javaChess.renderer2d.StatusPanel)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.JavaChessAction.getName()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.menu.EditMenu.getMenu()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.engine.ChessEngine.getMenu()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.renderer2d.StatusPanel.setActionText(java.lang.String)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.listener.EngineStatusListener.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.JavaChess.jbInit()---de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.game.GameImpl.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.notation.GameNotationImpl.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(int)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.GameController.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.engine.ChessEngine,de.java_chess.javaChess.board.Board,de.java_chess.javaChess.timer.GameTimer)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(de.java_chess.javaChess.GameController,de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.menu.EditMenu.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.renderer2d.NotationPanel.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.renderer2d.EnginePanel.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.renderer2d.NavigationPanel.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.ResetGameAction.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.LoadGameAction.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.SaveGameAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.HelpAction.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.AboutAction.-init-()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.util.ResourceLoader.addLocation(java.lang.String)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.util.ResourceLoader.getInstance()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.engine.ChessEngineImpl.addEngineStatusListener(de.java_chess.javaChess.listener.EngineStatusListener)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.GameController.setRenderer(de.java_chess.javaChess.renderer.ChessBoardRenderer)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.notation.GameNotationImpl.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.menu.EditMenu.setNotationPanel(de.java_chess.javaChess.renderer2d.NotationPanel)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.engine.ChessEngineImpl.setEnginePanel(de.java_chess.javaChess.renderer2d.EnginePanel)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.engine.ChessEngineImpl.setStatusPanel(de.java_chess.javaChess.renderer2d.StatusPanel)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.JavaChessAction.getName()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.menu.EditMenu.getMenu()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.engine.ChessEngine.getMenu()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.renderer2d.StatusPanel.setActionText(java.lang.String)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.listener.EngineStatusListener.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.JavaChess.main(java.lang.String[])---de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.game.Game.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.notation.GameNotation.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.board.Board.initialPosition()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.engine.ChessEngine.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(int)
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.GameController.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.renderer.ChessBoardRenderer.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.game.GameImpl.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.notation.GameNotationImpl.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.engine.ChessEngineImpl.reset()
de.java_chess.javaChess.JavaChess.reset()---de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()
de.java_chess.javaChess.action.AboutAction.-init-()---de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.AboutAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.dialogs.DialogAbout.getInstance()
de.java_chess.javaChess.action.AboutAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.util.Tools.setDialogToCenter(javax.swing.JDialog)
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.game.GameImpl$GameStatus)
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.util.UnsynchronizedArrayStack.push(java.lang.Object)
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()
de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()
de.java_chess.javaChess.game.GameImpl.getLastGameStatus()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()
de.java_chess.javaChess.game.GameImpl.getLastGameStatus()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()
de.java_chess.javaChess.game.GameImpl.getLastPly()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()
de.java_chess.javaChess.game.GameImpl.getLastPly()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()
de.java_chess.javaChess.game.GameImpl.getLastPly()---de.java_chess.javaChess.game.GameImpl$GameStatus.getPly()
de.java_chess.javaChess.engine.ChessEngine.getCurrentGameState(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngine.getCurrentGameState(boolean)---de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()
de.java_chess.javaChess.engine.ChessEngine.getCurrentGameState(boolean)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getMaximumSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.removeOldestEntry()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.setMaximumSize(int)
de.java_chess.javaChess.game.GameImpl.getNumberOfPlies()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.size()
de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()
de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()
de.java_chess.javaChess.game.GameImpl.hasBeenMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.ChessEngine.getMenu()---de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(de.java_chess.javaChess.engine.opening_book.OpeningBook)
de.java_chess.javaChess.engine.ChessEngine.getMenu()---de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngine.getMenu()---de.java_chess.javaChess.engine.ChessEngineImpl.setMaximumSearchTime(int)
de.java_chess.javaChess.engine.ChessEngine.getMenu()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.setMaximumSize(int)
de.java_chess.javaChess.engine.ChessEngine.getMenu()---de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()
de.java_chess.javaChess.engine.ChessEngine.getMenu()---de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(de.java_chess.javaChess.board.Board,boolean)
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getPly()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getBoard()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getPly()
de.java_chess.javaChess.game.GameImpl.reset()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.clear()
de.java_chess.javaChess.engine.ChessEngine.getUserPlies()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngine.getUserPlies()---de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()
de.java_chess.javaChess.engine.ChessEngine.getUserPlies()---de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()
de.java_chess.javaChess.game.GameImpl.toString()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.iterator()
de.java_chess.javaChess.game.GameImpl.toString()---de.java_chess.javaChess.game.GameImpl$GameStatus.getPly()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.hashKey()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry.getSearchDepth()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getSearchDepth()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getMaximumSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.removeOldestEntry()
de.java_chess.javaChess.game.GameImpl.undoLastPly()---de.java_chess.javaChess.util.UnsynchronizedArrayStack.pop()
de.java_chess.javaChess.engine.ChessEngine.reset()---de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(boolean)
de.java_chess.javaChess.engine.ChessEngine.reset()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.reset()
de.java_chess.javaChess.engine.ChessEngine.reset()---de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()
de.java_chess.javaChess.engine.ChessEngine.reset()---de.java_chess.javaChess.renderer2d.EnginePanel.setText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngine.reset()---de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngine.reset()---de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply,long)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply,long)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply,long)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(de.java_chess.javaChess.ply.Ply,long)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getMaximumSize()
de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.removeOldestEntry()
de.java_chess.javaChess.action.HelpAction.-init-()---de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.LoadGameAction.-init-()---de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.pgn.PGNFile.-init-(java.io.Reader)
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()
de.java_chess.javaChess.action.LoadGameAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.pgn.PGNFile.readGame()
de.java_chess.javaChess.action.ResetGameAction.-init-()---de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.ResetGameAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.JavaChess.reset()
de.java_chess.javaChess.action.ResetGameAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.JavaChess.getInstance()
de.java_chess.javaChess.action.SaveGameAction.-init-(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.engine.ChessEngine.startPermanentBrain()---de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngine.startPermanentBrain()---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.startComputation()
de.java_chess.javaChess.engine.ChessEngine.startPermanentBrain()---de.java_chess.javaChess.engine.ChessEngineImpl.getPermanentBrain()
de.java_chess.javaChess.engine.ChessEngine.startPermanentBrain()---de.java_chess.javaChess.engine.ChessEngineImpl.setAnalyzedBoards(long)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoard.getEmptySquares()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.Position.setSquareIndex(int)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.position.PositionImpl.setSquareIndex(int)
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.piece.PieceImpl.getType()
de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(de.java_chess.javaChess.bitboard.BitBoard,boolean)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getType()
de.java_chess.javaChess.engine.ChessEngine.stopPermanentBrain()---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.stopComputation()
de.java_chess.javaChess.engine.ChessEngine.stopPermanentBrain()---de.java_chess.javaChess.engine.ChessEngineImpl.getPermanentBrain()
de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.getPermanentBrain()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.resetUserPlies()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.opening_book.OpeningBook.doUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.getPiece(de.java_chess.javaChess.position.Position)
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.engine.ChessEngine.validateUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.engine.opening_book.OpeningBook.addPGNopening(java.io.File)---de.java_chess.javaChess.pgn.PGNFile.-init-(java.io.Reader)
de.java_chess.javaChess.engine.opening_book.OpeningBook.addPGNopening(java.io.File)---de.java_chess.javaChess.pgn.PGNFile.readGame()
de.java_chess.javaChess.game.GameImpl$GameStatus.setMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.game.GameImpl$GameStatus.setMoved(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(de.java_chess.javaChess.engine.BitBoardAnalyzer)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.startComputation()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(int)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.PlyGenerator.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.hashtable.PlyHashtable)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.engine.PlyGenerator)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.-init-(de.java_chess.javaChess.engine.ChessEngine)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.ChessEngine.setGame(de.java_chess.javaChess.game.Game)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.ChessEngine.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.ChessEngine.setWhite(boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.ChessEngine.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.-init-(de.java_chess.javaChess.game.Game,de.java_chess.javaChess.notation.GameNotation,de.java_chess.javaChess.board.Board,boolean)---de.java_chess.javaChess.engine.ChessEngine.startPermanentBrain()
de.java_chess.javaChess.engine.opening_book.OpeningBook.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.stopComputation()
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.engine.ChessEngine.stopPermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.listener.EngineStatusListener.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.setMaximumSize(int)
de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)
de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()
de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotation.size()
de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotation.getPlyNotation(int)
de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(boolean)---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.stopComputation()
de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(boolean)---de.java_chess.javaChess.engine.ChessEngine.stopPermanentBrain()
de.java_chess.javaChess.listener.EngineStatusListener.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)---de.java_chess.javaChess.renderer2d.StatusPanel.setActionText(java.lang.String)
de.java_chess.javaChess.listener.EngineStatusListener.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)---de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.engine.opening_book.OpeningBook.reset()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.addPGNopening(java.io.File)---de.java_chess.javaChess.pgn.PGNFile.-init-(java.io.Reader)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.addPGNopening(java.io.File)---de.java_chess.javaChess.pgn.PGNFile.readGame()
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.dialogs.SetupBoardDialog.-init-()
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.dialogs.PlayerDialog.-init-(int,java.lang.String)
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.util.Tools.setDialogToCenter(javax.swing.JDialog)
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer2d.NotationPanel.getWhitePlayerName()
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer2d.NotationPanel.getBlackPlayerName()
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.dialogs.PlayerDialog.getNewName()
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer2d.NotationPanel.setWhitePlayerName(java.lang.String)
de.java_chess.javaChess.menu.EditMenu.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.renderer2d.NotationPanel.setBlackPlayerName(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(de.java_chess.javaChess.board.Board)---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotation.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotation.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotationImpl.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.notation.GameNotationImpl.getPlyNotation(int)
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.engine.opening_book.OpeningBook.getOpeningBookPly()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.ply.AnalyzedPly.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.action.SaveGameAction.-init-(java.lang.String,de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.action.SaveGameAction.trySave(java.io.File)---de.java_chess.javaChess.pgn.PGNOutputStream.-init-(java.io.File)
de.java_chess.javaChess.action.SaveGameAction.trySave(java.io.File)---de.java_chess.javaChess.pgn.PGNOutputStream.write(de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.action.SaveGameAsAction.-init-(de.java_chess.javaChess.notation.GameNotation)---de.java_chess.javaChess.action.SaveGameAction.-init-(java.lang.String,de.java_chess.javaChess.notation.GameNotation)
de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.pgn.PGNFileFilter.-init-()
de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.action.SaveGameAction.trySave(java.io.File)
de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()---de.java_chess.javaChess.pgn.PGNFileFilter.-init-()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.notation.GameNotation.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.notation.GameNotation.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.notation.GameNotationImpl.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()---de.java_chess.javaChess.notation.GameNotationImpl.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotation.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotation.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotationImpl.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotationImpl.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotation.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotation.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotationImpl.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()---de.java_chess.javaChess.notation.GameNotationImpl.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.notation.GameNotation.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.notation.PlyNotation.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.notation.GameNotation.getPlyNotation(int)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.notation.GameNotationImpl.size()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.notation.PlyNotationImpl.getPly()
de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.isInOpening(int)---de.java_chess.javaChess.notation.GameNotationImpl.getPlyNotation(int)
de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(boolean)---de.java_chess.javaChess.engine.ChessEngine.getBoard()
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(de.java_chess.javaChess.engine.opening_book.OpeningBook)---de.java_chess.javaChess.action.JavaChessAction.-init-(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getMaximumSize()
de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.pgn.PGNFileFilter.accept(java.io.File)
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.engine.opening_book.OpeningBook.addPGNopening(java.io.File)
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.addPGNopening(java.io.File)
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.processFileOrDirectory(java.io.File)---de.java_chess.javaChess.pgn.PGNFileFilter.accept(java.io.File)
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.processFileOrDirectory(java.io.File)---de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.processFileOrDirectory(java.io.File)---de.java_chess.javaChess.engine.opening_book.OpeningBook.addPGNopening(java.io.File)
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.processFileOrDirectory(java.io.File)---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.addPGNopening(java.io.File)
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()---de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(de.java_chess.javaChess.engine.opening_book.OpeningBook)
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.setMaximumSize(int)
de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()---de.java_chess.javaChess.piece.Piece.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()---de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()---de.java_chess.javaChess.piece.Piece.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()---de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.clone()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.isWhite()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPly.isLeftCastling()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.-init-(de.java_chess.javaChess.position.Position,de.java_chess.javaChess.position.Position,boolean)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getSource()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.isWhite()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPly.isLeftCastling()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPly.getTypeAfterTransformation()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.getDestination()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPly.getAttackedPosition()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getSource()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.isWhite()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.isWhite()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.CastlingPlyImpl.isLeftCastling()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.TransformationPlyImpl.getTypeAfterTransformation()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.getColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.getDestination()
de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.EnPassantPlyImpl.getAttackedPosition()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.Piece.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.board.Board.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.piece.PieceImpl.-init-(byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.processPGNfile(java.io.File)---de.java_chess.javaChess.engine.opening_book.OpeningBook.addPGNopening(java.io.File)
de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.processPGNfile(java.io.File)---de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.addPGNopening(java.io.File)
de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.getMaximumSize()
de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getPlyForUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(boolean)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getPlyForUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngine.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getPlyForUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getPlyForUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.Ply.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getPlyForUserPly(de.java_chess.javaChess.ply.Ply)---de.java_chess.javaChess.ply.PlyImpl.equals(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()---de.java_chess.javaChess.engine.ChessEngine.getBoard()
de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()---de.java_chess.javaChess.engine.ChessEngine.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()---de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.permanent_brain.PreComputedPlyImpl.-init-(de.java_chess.javaChess.ply.AnalyzedPly,int)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.setSearchDepth(int)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngine.getBoard()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngine.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(boolean)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.setAnalyzedBoards(long)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngine.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.increaseSearchDepth()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.setBoard(de.java_chess.javaChess.board.Board)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.run()---de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.startComputation()---de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(boolean)
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.startComputation()---de.java_chess.javaChess.engine.ChessEngine.getUserPlies()
de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.startComputation()---de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()---de.java_chess.javaChess.position.PositionImpl.-init-(int)
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()---de.java_chess.javaChess.piece.PieceImpl.-init-(byte,byte)
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()---de.java_chess.javaChess.piece.Piece.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()---de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.piece.Piece.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.Position.getSquareIndex()
de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.dialogs.PieceSelectionPanel.getTypeAndColor()
de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(de.java_chess.javaChess.piece.Piece,de.java_chess.javaChess.position.Position)---de.java_chess.javaChess.position.PositionImpl.getSquareIndex()
de.java_chess.javaChess.dialogs.DialogAbout.-init-()---de.java_chess.javaChess.dialogs.DialogAbout_CloseButton_keyAdapter.-init-(de.java_chess.javaChess.dialogs.DialogAbout)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.game.Game.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.ChessEngine.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.game.GameImpl.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(de.java_chess.javaChess.ply.Ply,de.java_chess.javaChess.board.Board,boolean,int,short,short)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.notifyListeners()---de.java_chess.javaChess.listener.EngineStatusListener.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.engine.ChessEngineImpl.notifyListeners()---de.java_chess.javaChess.JavaChess.engineStatusChanged(de.java_chess.javaChess.engine.ChessEngineImpl)
de.java_chess.javaChess.engine.ChessEngineImpl.reset()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.reset()
de.java_chess.javaChess.engine.ChessEngineImpl.reset()---de.java_chess.javaChess.renderer2d.EnginePanel.setText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.reset()---de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.reset()---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.startComputation()
de.java_chess.javaChess.engine.ChessEngineImpl.reset()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.reset()
de.java_chess.javaChess.engine.ChessEngineImpl.reset()---de.java_chess.javaChess.engine.ChessEngine.startPermanentBrain()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getPlyForUserPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.permanent_brain.PreComputedPly.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.permanent_brain.PreComputedPly.getSearchDepth()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.AnalyzedPly.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.AnalyzedPly.getScore()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.Game.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.ChessEngine.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.GameImpl.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.Game.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.ChessEngine.getBoard()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.ChessEngine.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.game.GameImpl.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(java.lang.String)
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.permanent_brain.PreComputedPlyImpl.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.permanent_brain.PreComputedPlyImpl.getSearchDepth()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()
de.java_chess.javaChess.engine.ChessEngineImpl.run()---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.dialogs.DialogAbout.getInstance()---de.java_chess.javaChess.dialogs.DialogAbout_CloseButton_keyAdapter.-init-(de.java_chess.javaChess.dialogs.DialogAbout)
de.java_chess.javaChess.dialogs.DialogAbout.jbInit()---de.java_chess.javaChess.dialogs.DialogAbout_CloseButton_keyAdapter.-init-(de.java_chess.javaChess.dialogs.DialogAbout)
de.java_chess.javaChess.dialogs.DialogAbout_CloseButton_keyAdapter.keyReleased(java.awt.event.KeyEvent)---de.java_chess.javaChess.dialogs.DialogAbout.CloseButton_keyReleased(java.awt.event.KeyEvent)
de.java_chess.javaChess.dialogs.PieceSelectionPanel.-init-()---de.java_chess.javaChess.renderer2d.PieceRenderer.-init-(byte,byte,de.java_chess.javaChess.renderer2d.ChessSet,java.awt.Component)
de.java_chess.javaChess.dialogs.PieceSelectionPanel.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.piece.Piece.setType(byte)
de.java_chess.javaChess.dialogs.PieceSelectionPanel.actionPerformed(java.awt.event.ActionEvent)---de.java_chess.javaChess.piece.Piece.setColor(byte)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(de.java_chess.javaChess.ply.Ply,short)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(de.java_chess.javaChess.board.Board,de.java_chess.javaChess.ply.Ply,int)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.ply.Ply.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzer.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.ChessEngine.isWhite()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.Game.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.Game.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.ply.PlyImpl.isCapture()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(de.java_chess.javaChess.bitboard.BitBoard,boolean)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.ChessEngine.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.GameImpl.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.board.Board.getBoardAfterPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.Game.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtable.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.ChessEngine.getBoard()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.GameImpl.doPly(de.java_chess.javaChess.ply.Ply)
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.ChessEngine.getGame()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.game.GameImpl.undoLastPly()
de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(boolean)---de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(de.java_chess.javaChess.engine.hashtable.PlyHashtableEntry)
de.java_chess.javaChess.dialogs.PieceSelectionPanel.getSelectedPieceImage()---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.dialogs.PieceSelectionPanel.getSelectedPieceImage()---de.java_chess.javaChess.piece.Piece.getColor()
de.java_chess.javaChess.dialogs.PieceSelectionPanel.initializeSelectedIconLabel()---de.java_chess.javaChess.piece.Piece.getType()
de.java_chess.javaChess.dialogs.PieceSelectionPanel.initializeSelectedIconLabel()---de.java_chess.javaChess.piece.Piece.getColor()
